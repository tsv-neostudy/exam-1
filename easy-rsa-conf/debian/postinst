#!/bin/sh
# postinst script for test
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in

    configure)
	
	###################################
	# user "safer" create
	###################################
        u_name="safer"
        u_group="safer"
        #make user, if it doesn't exist
        [ $(id -u "$u_name" 2>/dev/null) ] || useradd $u_name -m -s /bin/bash

        ###################################
	#make folder, if it doesn't exist
        #make safer as owner and 700-access
	###################################
        dest_dir="/etc/easy-rsa"
        if [ -d "$dest_dir" ]
        then

                res=`find "$dest_dir" -lname "/usr/share/easy-rsa/*"`
                if [ -d "/usr/share/easy-rsa/" ] && [ -z "$res" ]
                then
                        ln -s /usr/share/easy-rsa/* "$dest_dir"
                fi
                chmod -R 700 "$dest_dir"
        else
                mkdir -m 700 -p "$dest_dir"
                ln -s /usr/share/easy-rsa/* "$dest_dir"
        fi

        chown -R "$u_name":"$u_group" "$dest_dir"
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument '$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
