#!/bin/sh
# postinst script for openvpn-conf
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
    
    ############################
    #add new user ovpn
    ############################
    u_name="ovpn"
    g_name="ovpn"
    #add user if it doesn't exist
    [ $(id -u "$u_name" 2>/dev/null) ] || useradd "$u_name" --system --shell /sbin/nologin
	
    #make dir /etc/openvpn if it doesn't exist
    #apply access rights
#    dest_dir="/etc/openvpn"
#    [ -d "$dest_dir" ] || mkdir "$dest_dir"

    #make subdirs /etc/openvpn/clnt-prep/{keys,files}
    mkdir -p  /etc/openvpn/clnt-prep/keys
    mkdir -p  /etc/openvpn/clnt-prep/files
    chown -R "$u_name":"$g_name" /etc/openvpn/clnt-prep/ 
    chmod -R 700 /etc/openvpn/clnt-prep

    ############################
    #change key ip_forward to 1 and apply new settings
    ############################
    
    if [ $(cat /proc/sys/net/ipv4/ip_forward) -eq 0 ]; then
	    sed -i '/net.ipv4.ip_forward=/c net.ipv4.ip_forward=1' "/etc/sysctl.conf"
	    sysctl -p
    fi

    
    ###########################
    #iptables settings 
    ###########################
    #loopback traffic
    iptables -A INPUT -i lo -j ACCEPT
    #a response traffic, returns back only
    iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    iptables -A INPUT -m conntrack --ctstate INVALID -j DROP
    iptables -A INPUT -p icmp -j ACCEPT

    #get default route network interface name
    EXT_NIC=$(ip -4 route get 8.8.8.8 | awk '{print $5}')

    #get local network only interface name
    INT_NIC=$(ip -4 route list default | grep -v "${EXT_NIC}" | awk '{print $5}')
    [ -z "${INT_NIC}" ] && ( echo "Installation can not find second NIC for internal network connection."; exit 1 )

    #get local network  IP address 
    INT_IP=$(ip -4 route list default | grep "${INT_NIC}" | awk '{print $9}')

    #get local network with network mask
    INT_CIDR=$(ip -4 route | grep "${INT_IP} $" | awk '{print $1}')
    
    #SSH server for all interfaces
    proto=tcp
    port=22
    iptables -A INPUT -p "$proto" --dport "$port" -m conntrack --ctstate NEW -j ACCEPT

    #OpenVPN for external interface only
    proto=udp
    port=53

    iptables -A INPUT -i "$EXT_NIC" -p "$proto" --dport "$port" -m conntrack --ctstate NEW -j ACCEPT
    
    #Allow TUN interface connections to OpenVPN server
    iptables -A INPUT -i tun+ -m conntrack --ctstate NEW -j ACCEPT
    
    #Allow TUN interface connections to be forwarded through other interface
    iptables -A FORWARD -i "$EXT_NIC" -o tun+ -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    iptables -A FORWARD -i "$INT_NIC" -o tun+ -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
    iptables -A FORWARD -i "$EXT_NIC" -o "$INT_NIC" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
    iptables -A FORWARD -i "$EXT_NIC" -j DROP
    #iptables -A FORWARD -i tun+ -m conntrack --ctstate NEW -j ACCEPT
    
    #NAT the client traffic to the internet
    iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o "$EXT_NIC" -j MASQUERADE
    iptables -t nat -A POSTROUTING -s "$INT_CIDR" -o "$EXT_NIC" -j MASQUERADE
    #iptables -t nat -A POSTROUTING -s 192.168.111.0/24 -o tun+ -j MASQUERADE

    #DNAT traffic for www (80, 443) and Prometheus (9090) ports
    #iptables -t nat -A PREROUTING -i 
    #drop all undefined input traffic
    iptables -P INPUT DROP

    #custom iptables settings save persustent
    netfilter-persistent save


    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument '$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
